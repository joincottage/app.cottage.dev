{"version":3,"file":"../pages/api/airtable/tasks.js","mappings":"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","sources":["webpack://cottage-api/external commonjs \"@sentry/nextjs\"","webpack://cottage-api/external commonjs \"airtable\"","webpack://cottage-api/external commonjs \"cors\"","webpack://cottage-api/./src/apiService/airtable/getDataFromAirtable.ts","webpack://cottage-api/./src/pages/api/airtable/tasks.ts"],"sourcesContent":["module.exports = require(\"@sentry/nextjs\");","module.exports = require(\"airtable\");","module.exports = require(\"cors\");","import base from './base';\n\ninterface RequiredParams {\n  tableName: string;\n  filterByFormula?: string;\n}\n\nexport default async function getDataFromAirtable({ tableName, filterByFormula = \"\" }: RequiredParams): Promise<{ data: any[] }> {\n  const data = await new Promise<any[]>((resolve, reject) => {\n    const data: any[] = [];\n    base(tableName)\n      .select({\n        filterByFormula,\n        view: \"Grid view\",\n      })\n      .eachPage(\n        function page(records, fetchNextPage) {\n          records.forEach(function (record) {\n            data.push(record.fields);\n          });\n\n          fetchNextPage();\n        },\n        function done(err) {\n          if (err) {\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          resolve(data);\n        }\n      );\n  });\n\n  return { data };\n}","import { NextApiRequest, NextApiResponse } from \"next\";\nimport base from \"src/apiService/airtable/base\";\nimport validateUser from \"src/apiService/softr/validateUser\";\nimport cors from \"cors\";\nimport runMiddleware from \"src/utils/runMiddleware\";\nimport { withSentry } from \"@sentry/nextjs\";\nimport corsOptions from \"../../../apiService/corsOptions\";\nimport getDataFromAirtable from \"src/apiService/airtable/getDataFromAirtable\";\n\nasync function handler(\n  req: NextApiRequest,\n  res: NextApiResponse\n): Promise<void> {\n  await runMiddleware(req, res, cors(corsOptions));\n\n  // const isValidUser = await validateUser(req.query.jwtToken as string);\n  // if (!isValidUser) {\n  //   res.status(401).send(\"Unauthorized\");\n  //   return;\n  // }\n\n  switch (req.method) {\n    case \"GET\": {\n      if (!req.query.recordId) {\n        res.status(400).send(\"Bad Request\");\n        return;\n      }\n\n      const { data: submission } = await getDataFromAirtable({\n        tableName: \"Tasks\",\n        filterByFormula: `{Record ID} = '${req.query.recordId}'`,\n      });\n\n      res.json(submission);\n\n      break;\n    }\n    case \"POST\": {\n      const fields = req.body.fields;\n      if (!fields) {\n        res.status(400).send(\"Bad Request\");\n        return;\n      }\n\n      base(\"Tasks\").create(\n        [\n          {\n            fields,\n          },\n        ],\n        function (err: any, records: any) {\n          if (err) {\n            console.error(err);\n            res.status(500).send(\"Error creating records\");\n            return;\n          }\n          res.json(records[0].fields);\n        }\n      );\n\n      break;\n    }\n    case \"PATCH\": {\n      if (!req.query.recordId || !req.body.fields) {\n        res.status(400).send(\"Bad Request\");\n        return;\n      }\n\n      // @ts-ignore\n      base(\"Tasks\").update(\n        [\n          {\n            id: req.query.recordId,\n            fields: req.body.fields,\n          },\n        ],\n        function (err: any, records: any) {\n          if (err) {\n            console.error(err);\n            res.status(500).send(\"Error updating task\");\n            return;\n          }\n          res.json(records[0].fields);\n        }\n      );\n\n      break;\n    }\n    default: {\n      console.error(\n        `Unsupported method type ${req.method} made to endpoint ${req.url}`\n      );\n      res.status(404).end();\n      break;\n    }\n  }\n}\n\nexport default withSentry(handler);\n"],"names":["base","getDataFromAirtable","tableName","filterByFormula","data","Promise","resolve","reject","select","view","eachPage","page","records","fetchNextPage","forEach","record","push","fields","done","err","console","error","cors","runMiddleware","withSentry","corsOptions","handler","req","res","method","query","recordId","status","send","submission","json","body","create","update","id","url","end"],"sourceRoot":""}