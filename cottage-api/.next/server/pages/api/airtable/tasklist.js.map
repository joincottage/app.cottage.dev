{"version":3,"file":"../pages/api/airtable/tasklist.js","mappings":"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","sources":["webpack://cottage-api/external commonjs \"@sentry/nextjs\"","webpack://cottage-api/external commonjs \"airtable\"","webpack://cottage-api/external commonjs \"cors\"","webpack://cottage-api/external commonjs \"axios\"","webpack://cottage-api/./src/apiService/softr/validateUser.ts","webpack://cottage-api/./src/pages/api/airtable/tasklist.ts"],"sourcesContent":["module.exports = require(\"@sentry/nextjs\");","module.exports = require(\"airtable\");","module.exports = require(\"cors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","import axios from \"axios\";\n\n// https://docs.softr.io/my-account/api-settings#validate-an-authentication-token\nexport default async function validateUser(jwt: string) {\n  const response = await axios.post(\n    \"https://sequense.softr.app/v1/api/users/validate-token\",\n    { jwt },\n    { headers: { \"Content-Type\": \"application/json\" } }\n  );\n\n  return response.data;\n}\n","import { NextApiRequest, NextApiResponse } from \"next\";\nimport base from \"src/apiService/airtable/base\";\nimport validateUser from \"src/apiService/softr/validateUser\";\nimport cors from \"cors\";\nimport runMiddleware from \"src/utils/runMiddleware\";\nimport { withSentry } from \"@sentry/nextjs\";\nimport corsOptions from \"../../../apiService/corsOptions\";\n\nasync function handler(\n  req: NextApiRequest,\n  res: NextApiResponse\n): Promise<void> {\n  await runMiddleware(req, res, cors(corsOptions));\n\n  const isValidUser = await validateUser(req.query.jwtToken as string);\n  if (!isValidUser) {\n    res.status(401).send(\"Unauthorized\");\n    return;\n  }\n\n  switch (req.method) {\n    case \"POST\": {\n      const fields = req.body.fields;\n      if (!fields) {\n        res.status(400).send(\"Bad Request\");\n        return;\n      }\n\n      base(\"Task List Instances\").create(\n        [\n          {\n            fields,\n          },\n        ],\n        function (err: any, records: any) {\n          if (err) {\n            console.error(err);\n            res.status(500).send(\"Error creating records\");\n            return;\n          }\n          res.json(records[0].fields);\n        }\n      );\n\n      break;\n    }\n    case \"PATCH\": {\n      if (!req.query.taskListId || !req.body.fields) {\n        res.status(400).send(\"Bad Request\");\n        return;\n      }\n\n      // @ts-ignore\n      base(\"Task List Instances\").update(\n        [\n          {\n            id: req.query.taskListId,\n            fields: req.body.fields,\n          },\n        ],\n        function (err: any, records: any) {\n          if (err) {\n            console.error(err);\n            res.status(500).send(\"Error updating tasklist\");\n            return;\n          }\n          res.json(records[0].fields);\n        }\n      );\n\n      break;\n    }\n    default: {\n      console.error(\n        `Unsupported method type ${req.method} made to endpoint ${req.url}`\n      );\n      res.status(404).end();\n      break;\n    }\n  }\n}\n\nexport default withSentry(handler);\n"],"names":["axios","validateUser","jwt","response","post","headers","data","base","cors","runMiddleware","withSentry","corsOptions","handler","req","res","isValidUser","query","jwtToken","status","send","method","fields","body","create","err","records","console","error","json","taskListId","update","id","url","end"],"sourceRoot":""}