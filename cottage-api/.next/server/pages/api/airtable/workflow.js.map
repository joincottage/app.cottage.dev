{"version":3,"file":"../pages/api/airtable/workflow.js","mappings":"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","sources":["webpack://cottage-api/external commonjs \"@sentry/nextjs\"","webpack://cottage-api/external commonjs \"airtable\"","webpack://cottage-api/external commonjs \"cors\"","webpack://cottage-api/./src/apiService/airtable/getDataFromAirtable.ts","webpack://cottage-api/external commonjs \"axios\"","webpack://cottage-api/./src/apiService/softr/validateUser.ts","webpack://cottage-api/./src/pages/api/airtable/workflow.ts"],"sourcesContent":["module.exports = require(\"@sentry/nextjs\");","module.exports = require(\"airtable\");","module.exports = require(\"cors\");","import base from './base';\n\ninterface RequiredParams {\n  tableName: string;\n  filterByFormula?: string;\n}\n\nexport default async function getDataFromAirtable({ tableName, filterByFormula = \"\" }: RequiredParams): Promise<{ data: any[] }> {\n  const data = await new Promise<any[]>((resolve, reject) => {\n    const data: any[] = [];\n    base(tableName)\n      .select({\n        filterByFormula,\n        view: \"Grid view\",\n      })\n      .eachPage(\n        function page(records, fetchNextPage) {\n          records.forEach(function (record) {\n            data.push(record.fields);\n          });\n\n          fetchNextPage();\n        },\n        function done(err) {\n          if (err) {\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          resolve(data);\n        }\n      );\n  });\n\n  return { data };\n}","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","import axios from \"axios\";\n\n// https://docs.softr.io/my-account/api-settings#validate-an-authentication-token\nexport default async function validateUser(jwt: string) {\n  const response = await axios.post(\n    \"https://sequense.softr.app/v1/api/users/validate-token\",\n    { jwt },\n    { headers: { \"Content-Type\": \"application/json\" } }\n  );\n\n  return response.data;\n}\n","import { NextApiRequest, NextApiResponse } from \"next\";\nimport getDataFromAirtable from \"src/apiService/airtable/getDataFromAirtable\";\nimport validateUser from \"src/apiService/softr/validateUser\";\nimport cors from \"cors\";\nimport runMiddleware from \"src/utils/runMiddleware\";\nimport { withSentry } from \"@sentry/nextjs\";\nimport corsOptions from \"../../../apiService/corsOptions\";\nimport base from \"src/apiService/airtable/base\";\n\nasync function handler(\n  req: NextApiRequest,\n  res: NextApiResponse\n): Promise<void> {\n  await runMiddleware(req, res, cors(corsOptions));\n\n  if (!req.query.jwtToken) {\n    res.status(400).send(\"Bad Request\");\n    return;\n  }\n  const isValidUser = await validateUser(req.query.jwtToken as string);\n  if (!isValidUser) {\n    res.status(401).send(\"Unauthorized\");\n    return;\n  }\n\n  switch (req.method) {\n    case \"GET\": {\n      if (!req.query.loggedInUserRecordID) {\n        res.status(400).send(\"Bad Request\");\n        return;\n      }\n\n      if (!req.query.recordId || req.query.recordId === \"null\") {\n        const { data: clients } = await getDataFromAirtable({\n          tableName: \"Clients\",\n          filterByFormula: `{Record ID (from Travel Agent)} = '${req.query.loggedInUserRecordID}'`,\n        });\n\n        const { data: taskTemplates } = await getDataFromAirtable({\n          tableName: \"Task List Templates\",\n        });\n\n        const tripName = \"\";\n        const workflowTaskLists = [];\n\n        const clientInWorkflow = null;\n        const selectedClient = undefined;\n\n        const location = {\n          description: \"\",\n          structured_formatting: {\n            main_text: \"\",\n            secondary_text: \"\",\n            main_text_matched_substrings: [],\n          },\n        };\n\n        const locationCoordinates = null;\n\n        const totalTravellerCount = -1;\n\n        const notes = \"\";\n\n        const data = {\n          tripName,\n          selectedClient,\n          location,\n          locationCoordinates,\n          taskListInstances: [],\n          totalTravellerCount,\n          notes,\n          airtableRecordData: {},\n          clients,\n          taskTemplates,\n        };\n\n        res.json(data);\n      } else {\n        const { data: workflowMetadata } = await getDataFromAirtable({\n          tableName: \"Trips\",\n          filterByFormula: `AND({Record ID (from Travel Agent)} = '${req.query.loggedInUserRecordID}',{Record ID}='${req.query.recordId}')`,\n        });\n\n        const { data: clients } = await getDataFromAirtable({\n          tableName: \"Clients\",\n          filterByFormula: `{Record ID (from Travel Agent)} = '${req.query.loggedInUserRecordID}'`,\n        });\n\n        const { data: taskListInstances } = await getDataFromAirtable({\n          tableName: \"Task List Instances\",\n          filterByFormula: `{Workflow ID} = '${req.query.recordId}'`,\n        });\n\n        const { data: taskTemplates } = await getDataFromAirtable({\n          tableName: \"Task List Templates\",\n        });\n\n        const tripName = workflowMetadata[0][\"Trip Name\"] || \"\";\n\n        const clientInWorkflow = workflowMetadata[0][\"Client\"]\n          ? workflowMetadata[0][\"Client\"][0]\n          : null;\n        const selectedClient = clients.find(\n          (c: any) => c[\"Record ID\"] === clientInWorkflow\n        );\n\n        const location = {\n          description: workflowMetadata[0][\"Arrival City\"] || \"\",\n          structured_formatting: {\n            main_text: workflowMetadata[0][\"Arrival City\"] || \"\",\n            secondary_text: \"\",\n            main_text_matched_substrings: [],\n          },\n        };\n\n        const locationCoordinates = {\n          lat: workflowMetadata[0][\"Latitude\"],\n          lng: workflowMetadata[0][\"Longitude\"],\n        };\n\n        let departureDate = null;\n        if (workflowMetadata[0][\"Trip Start Date\"]) {\n          departureDate = workflowMetadata[0][\"Trip Start Date\"];\n        }\n\n        let returnDate = null;\n        if (workflowMetadata[0][\"Trip End Date\"]) {\n          returnDate = workflowMetadata[0][\"Trip End Date\"];\n        }\n\n        const totalTravellerCount =\n          workflowMetadata[0][\"Total Traveller Count\"];\n\n        const notes = workflowMetadata[0][\"Notes\"];\n\n        const data = {\n          tripName,\n          selectedClient,\n          location,\n          locationCoordinates,\n          taskListInstances,\n          totalTravellerCount,\n          notes,\n          airtableRecordData: workflowMetadata[0],\n          clients,\n          taskTemplates,\n        };\n\n        res.json(data);\n      }\n\n      break;\n    }\n    case \"DELETE\": {\n      if (!req.query.workflowRecordId) {\n        res.status(400).send(\"Bad Request\");\n        return;\n      }\n\n      base(\"Trips\").destroy(\n        [req.query.workflowRecordId as string],\n        function (err, deletedRecords) {\n          if (err) {\n            console.error(err);\n            res.status(500).send(\"Error deleting workflow\");\n            return;\n          }\n          console.log(\"Deleted\", deletedRecords?.length, \"records\");\n          res.status(200).send(\"Workflow deleted successfully\");\n        }\n      );\n\n      break;\n    }\n    case \"PATCH\": {\n      if (!req.query.workflowRecordId || !req.body.fields) {\n        res.status(400).send(\"Bad Request\");\n        return;\n      }\n\n      base(\"Trips\").update(\n        [\n          {\n            id: req.query.workflowRecordId as string,\n            fields: req.body.fields,\n          },\n        ],\n        function (err: any, records: any) {\n          if (err) {\n            console.error(err);\n            res.status(500).send(\"Error updating workflow\");\n            return;\n          }\n          res.json(records[0].fields);\n        }\n      );\n\n      break;\n    }\n    case \"POST\": {\n      const fields = req.body.fields;\n      if (!fields) {\n        res.status(400).send(\"Bad Request\");\n        return;\n      }\n\n      base(\"Trips\").create(\n        [\n          {\n            fields: req.body.fields,\n          },\n        ],\n        function (err: any, records: any) {\n          if (err) {\n            console.error(err);\n            res.status(500).send(\"Error creating workflow\");\n            return;\n          }\n          res.json(records[0].fields);\n        }\n      );\n\n      break;\n    }\n    default: {\n      console.error(\n        `Unsupported method type ${req.method} made to endpoint ${req.url}`\n      );\n      res.status(404).end();\n      break;\n    }\n  }\n}\n\nexport default withSentry(handler);\n"],"names":["base","getDataFromAirtable","tableName","filterByFormula","data","Promise","resolve","reject","select","view","eachPage","page","records","fetchNextPage","forEach","record","push","fields","done","err","console","error","axios","validateUser","jwt","response","post","headers","cors","runMiddleware","withSentry","corsOptions","handler","req","res","query","jwtToken","status","send","isValidUser","method","loggedInUserRecordID","recordId","clients","taskTemplates","tripName","workflowTaskLists","clientInWorkflow","selectedClient","undefined","location","description","structured_formatting","main_text","secondary_text","main_text_matched_substrings","locationCoordinates","totalTravellerCount","notes","taskListInstances","airtableRecordData","json","workflowMetadata","find","c","lat","lng","departureDate","returnDate","workflowRecordId","destroy","deletedRecords","log","length","body","update","id","create","url","end"],"sourceRoot":""}