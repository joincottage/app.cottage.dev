{"version":3,"file":"382.js","mappings":";;;;;;;AAAA;;;;;;;;ACAA,wIAAwI,GAAG,wBAAwB;;;;;;;;;;ACAnK,EAAmE;AACnE,EAA8E;AAC9E,EAA6D;AAErB;AAExC,KAAK,CAACC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACF,UAAU,IAAIC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAE/EJ,gDAAW,CAAC,CAAC;IACXM,GAAG,EAAEL,UAAU,IAAI,CAA4E;IAC/F,EAA4E;IAC5EM,gBAAgB,EAAE,CAAG;AAKvB,CAAC;;;;;;;;;;;;;;AChB8B;AAE/B,KAAK,CAACE,IAAI,GAAG,GAAG,CAACD,iDAAQ,CAAC,CAAC;IAACE,MAAM,EAAER,OAAO,CAACC,GAAG,CAACQ,gBAAgB;AAAC,CAAC,EAAEF,IAAI,CACtE,CAAmB;AAGrB,iEAAeA,IAAI,EAAC;;;;;;;;;;;;ACNpB,iEAAe,CAAC;IACdG,MAAM,EAAE,CAAG;IACXC,oBAAoB,EAAE,GAAG;AAC3B,CAAC,EAAC;;;;;;;;;;;;ACDF,EAAsE;AACtE,EAA8D;AAC/C,QAAQ,CAACC,aAAa,CACnCC,GAAmB,EACnBC,GAAoB,EACpBC,EAAyB,EACzB,CAAC;IACD,MAAM,CAAC,GAAG,CAACC,OAAO,EAAEC,OAAO,EAAEC,MAAM,GAAK,CAAC;QACvCH,EAAE,CAACF,GAAG,EAAEC,GAAG,GAAGK,MAAW,GAAK,CAAC;YAC7B,EAAE,EAAEA,MAAM,YAAYC,KAAK,EAAE,CAAC;gBAC5B,MAAM,CAACF,MAAM,CAACC,MAAM;YACtB,CAAC;YAED,MAAM,CAACF,OAAO,CAACE,MAAM;QACvB,CAAC;IACH,CAAC;AACH,CAAC","sources":["webpack://cottage-api/../../../tmp/sentry-Ai4LCH/rewriteFramesHelper.js?8265","webpack://cottage-api/./node_modules/@sentry/webpack-plugin/src/sentry-webpack.module.js?3915","webpack://cottage-api/./sentry.server.config.js","webpack://cottage-api/./src/apiService/airtable/base.ts","webpack://cottage-api/./src/apiService/corsOptions.ts","webpack://cottage-api/./src/utils/runMiddleware.ts"],"sourcesContent":["global.__rewriteFramesDistDir__ = '.next';\n","var _global = (typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}); _global.SENTRY_RELEASE={id:\"SKFXDTkjPqd9kj55D3uqC\"};","// This file configures the initialization of Sentry on the server.\n// The config you add here will be used whenever the server handles a request.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nimport * as Sentry from '@sentry/nextjs';\n\nconst SENTRY_DSN = process.env.SENTRY_DSN || process.env.NEXT_PUBLIC_SENTRY_DSN;\n\nSentry.init({\n  dsn: SENTRY_DSN || 'https://2d1a45f8548f4801ac4828b62b16d87e@o1125793.ingest.sentry.io/6551216',\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1.0,\n  // ...\n  // Note: if you want to override the automatic release value, do not set a\n  // `release` value here - use the environment variable `SENTRY_RELEASE`, so\n  // that it will also get attached to your source maps\n});\n","import Airtable from \"airtable\";\n\nconst base = new Airtable({ apiKey: process.env.AIRTABLE_API_KEY }).base(\n  \"appk7ctplKKCsOhWQ\"\n);\n\nexport default base;\n","export default {\n  origin: \"*\",\n  optionsSuccessStatus: 200, // some legacy browsers (IE11, various SmartTVs) choke on 204\n};\n","import { NextApiRequest, NextApiResponse } from \"next\";\n\n// Helper method to wait for a middleware to execute before continuing\n// And to throw an error when an error happens in a middleware\nexport default function runMiddleware(\n  req: NextApiRequest,\n  res: NextApiResponse,\n  fn: (...opts: any) => any\n) {\n  return new Promise((resolve, reject) => {\n    fn(req, res, (result: any) => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n\n      return resolve(result);\n    });\n  });\n}\n"],"names":["Sentry","SENTRY_DSN","process","env","NEXT_PUBLIC_SENTRY_DSN","init","dsn","tracesSampleRate","Airtable","base","apiKey","AIRTABLE_API_KEY","origin","optionsSuccessStatus","runMiddleware","req","res","fn","Promise","resolve","reject","result","Error"],"sourceRoot":""}